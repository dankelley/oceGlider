% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oceanglider.R
\docType{methods}
\name{subset,glider-method}
\alias{subset,glider-method}
\title{Subset a glider Object}
\usage{
\S4method{subset}{glider}(x, subset, ...)
}
\arguments{
\item{x}{an oceanglider object, i.e. one inheriting from the \linkS4class{glider}.}

\item{subset}{a logical expression or a character string that indicates
how to take the subset. See \dQuote{Details}.}

\item{...}{Additional arguments, of which the only one permitted at the
moment is \code{debug}, an integer indicating the level of debugging information
to be permitted.}
}
\value{
An oceanglider object.
}
\description{
Select a portion of an glider object, specified according to one
of several possible schemes, based on the form of the argument named
\code{subset}. Note that the schemes cannot be combined, so
nested calls must be used to accomplish combinations.
}
\details{
Scheme 1: if \code{subset} is a logical expression written
in terms of data that are stored in the yos, then this expression is applied
to the \code{payload1} item in the \code{data} slot of the object
(see Example 1).

Scheme 2: if \code{subset} is a logical expression containing
the word \code{"yolength"}, then the expression is used as a filter
to select yos based on the number of samples they
contain (see Example 2). Typically, this might be used to avoid
very short yos that might have been inferred erroneously
by the glider instrumentation.

Scheme 3: If \code{subset} is the string \code{"ascending"}, then
only ascending segments of yos are retained. This is done
by selecting for \code{navState==117} in both the \code{glider}
and \code{payload1} streams of the \code{data} slot of the object.

Scheme 4: If \code{subset} is the string \code{"descending"}, then
only descending segments of yos are retained. This is done
by selecting for \code{navState==100} in both the \code{glider}
and \code{payload1} streams of the \code{data} slot of the object.
}
\section{Bugs}{

The 'ascending' and 'descending' methods do not work. This seems
to be a problem of exporting classes using roxygen2 tags. I am looking
into this.  DK 2019-03-28.
}

\examples{
\dontrun{

# Example 1. remove wild salinities
library(oceanglider)
g <- read.glider(filename)
gg <- subset(g, 0 < salinity & salinity < 40)
par(mfrow=c(2, 1))
hist(g[["salinity"]], main="S original")
hist(gg[["salinity"]], main="S cleaned")

# Example 2. remove short yos
gg <- subset(g, yolength > 4)

# Example 3. retain only ascending portions of yos
gascending <- subset(g, "ascending")

# Example 4. retain only descending portions of yos
gdescending <- subset(g, "descending")
}

}
\author{
Dan Kelley
}
