% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oceglider.R
\name{as.glider}
\alias{as.glider}
\title{Convert data to glider format}
\usage{
as.glider(type, data, units)
}
\arguments{
\item{type}{Character value giving the type of glider, e.g.
be either \code{seaexplorer} or \code{slocum}.}

\item{data}{A data frame containing the data. This is copied straight into
the \code{payload1} item in the \code{data} slot of the returned value,
\emph{without} name translation. For most functions in this package to work,
\code{data} ought to have items named \code{longitude},
\code{latitude}, \code{salinity}, \code{temperature} and
\code{pressure}.}

\item{units}{A list holding units, with names corresponding to the
names in the data. See the example for the format to be used
for \code{units}, but note that there are several items in this
dataset that are not given units, in this example.}
}
\description{
This function returns a glider object that holds data as provided
in the \code{data} argument, with units as provided by the \code{units}
argument. The \code{units} argument is optional, making the function
easy to use in interactive sessions, but production code ought to
be written with units fully specified.
}
\examples{
library(oceGlider)
directory <- system.file("extdata/seaexplorer/raw", package="oceGlider")
g <- read.glider.seaexplorer.delayed(directory)
data <- g[["payload"]]
units <- list(temperature=list(unit=expression(degree*C), scale="ITS-90"),
     salinity=list(unit=expression(), scale="PSS-78"),
     pressure=list(unit=expression(dbar), scale=""),
     longitude=list(unit=expression(degree*E), scale=""),
     latitude=list(unit=expression(degree*N), scale=""))
gg <- as.glider("seaexplorer", data, units)
par(mfrow=c(2, 1))
plotGlider(g, which="p")
plotGlider(gg, which="p")

}
\author{
Dan Kelley
}
