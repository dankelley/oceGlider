% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seaexplorer.R
\name{read.glider.seaexplorer}
\alias{read.glider.seaexplorer}
\title{Read a Seaexplorer File}
\usage{
read.glider.seaexplorer(files, missingValue = 9999, debug = 0)
}
\arguments{
\item{files}{Either a single integer, in which case it specifies
a yo number for a local file, or a character value of length 2
that provides the names of two local files, one (typically
with \code{gli} in its filename) representing
measurements made by sensors on the glider,
and the other (with \code{pld1} in its filename) representing
measurements made by sensors in the glider's payload. For the
the case of \code{files} being an integer, all local filenames are
found, and name-matching is done to try to find the \code{gli}
and \code{pld1} files.}

\item{missingValue}{Numerical value for missing data; all such values
are set to \code{NA} in the data as interpreted. The default value
works for one particular mission that was examined, but it might
not apply to other missions. When in doubt as to the correct value,
use \code{summary()} on the returned object, and check to see if the
data maximum is a peculiar value, e.g. 99, 999 or, as the default, 9999.}

\item{debug}{Integer indicating the debugging level; 0 for quiet
action and higher values for more indications of the processing
steps.}
}
\description{
Read a Seaexplorer File
}
\examples{
library(oceanglider)
## # Download and read a file (default server, mission, etc)
## yo <- 200
## url <- "ftp://ftp.dfo-mpo.gc.ca/glider/realData/SEA024/M32"
## filenames <- download.glider(url, paste("\\\\.", yo, "\\\\.gz$", sep=""), debug=1)
files <- system.file("extdata",
                     c("sea024.32.gli.sub.200.gz",
                       "sea024.32.pld1.sub.200.gz"), package="oceanglider")
d <- read.glider.seaexplorer(files)
ctd <- as.ctd(d[['salinity']], d[['temperature']], d[['pressure']],
              lon=d[['longitude']], lat=d[['latitude']])
plot(ctd)
## Isolate the upcast, inferred with oce::ctdTrim().
plot(ctdTrim(ctd, "upcast"))
## Isolate the upcast, using d[["NAV_RESOURCE"]]==117;
## note that the downcast has code 100.
plot(subset(ctd, d[["NAV_RESOURCE"]]==117))

}
\seealso{
Other functions for seaexplorer gliders: \code{\link{download.glider.seaexplorer}}

Other functions to read glider data: \code{\link{read.glider.slocum}}
}
\author{
Dan Kelley
}
\concept{functions for seaexplorer gliders}
\concept{functions to read glider data}
