% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seaexplorer.R
\name{read.glider.seaexplorer}
\alias{read.glider.seaexplorer}
\title{Read a Seaexplorer Glider file}
\usage{
read.glider.seaexplorer(files, missingValue = 9999, debug = 0)
}
\arguments{
\item{files}{Character value of length 2, giving the names of
a local glider-data file (typically with \code{gli} in the filname)
and th name of a payload-data file (typically with \code{pld} in
the filename).}

\item{missingValue}{Numerical value for missing data; all such values
are set to \code{NA} in the data as interpreted. The default value
works for one particular mission that was examined, but it might
not apply to other missions. When in doubt as to the correct value,
use \code{summary()} on the returned object, and check to see if the
data maximum is a peculiar value, e.g. 99, 999 or, as the default, 9999.}

\item{debug}{Integer indicating the debugging level; 0 for quiet
action and higher values for more indications of the processing
steps.}
}
\description{
\strong{FIXME: will probably remove nameMap.}
These files do not use standard names for variables, but
the \code{nameMap} argument facilitates renaming for storage
in the returned object. (Renaming simplifies later analysis, e.g.
permitting direct use of algorithms in the \code{oce} package,
which assume that salinity is named \code{"salinity"}, etc.)
The original names of data items are retained in the metadata
of the returned object, so that the \code{[[} operator in the \code{oce}
package can retrieve the data using either the original name
(e.g. \code{x[["sci_water_temp"]]}) or the more standard
name (e.g. \code{x[["temperature"]]}). In addition to names
given in \code{nameMap}, several other name/value inferences
are made, e.g. a character timestamp (named differently in gli
and pld1 files) is used to compute \code{time}, and similar actions
are done to infer \code{longitude} and \code{latitude},
which are in a combined degree+minute format that is
decoded by \code{\link{degreeMinute}}.
}
\examples{
library(oceanglider)
yo <- 200
url <- "ftp://ftp.dfo-mpo.gc.ca/glider/realData/SEA024/M32"
filenames <- download.glider(url, paste("\\\\.", yo, "\\\\.gz$", sep=""), debug=1)
if (2 == length(filenames)) {
    d <- read.glider.seaexplorer(filenames)
    ctd <- as.ctd(d[['salinity']], d[['temperature']], d[['pressure']],
                  lon=d[['longitude']], lat=d[['latitude']])
    plot(ctd)
    ## Isolate the upcast, which is the preferred subset for this particular dataset
    ## Note that we cannot use d[["NAV_RESOURCE"]]==100, because it has a
    ## false positive in the first point.
    plot(ctdTrim(ctd, "upcast"))
}

}
\seealso{
Other functions for seaexplorer gliders: \code{\link{download.glider.seaexplorer}}

Other functions to read glider data: \code{\link{read.glider.slocum}}
}
\author{
Dan Kelley
}
\concept{functions for seaexplorer gliders}
\concept{functions to read glider data}
