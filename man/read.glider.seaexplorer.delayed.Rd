% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seaexplorer_delayed.R
\name{read.glider.seaexplorer.delayed}
\alias{read.glider.seaexplorer.delayed}
\title{Read Delayed-Mode SeaExplorer Glider Data}
\usage{
read.glider.seaexplorer.delayed(
  directory,
  yo,
  level = 1,
  interpolateToCTD = TRUE,
  removeTimeSincePowerOn = 0,
  progressBar = interactive(),
  debug
)
}
\arguments{
\item{directory}{The directory in which the delayed-mode SeaExplorer files are located.}

\item{yo}{A numeric value (or vector) specifying the yo numbers to
read. If this is not provided, \code{\link[=read.glider.seaexplorer.delayed]{read.glider.seaexplorer.delayed()}}
will read all yo numbers for which files are present in \code{dir}.}

\item{level}{A numeric value specifying the processing level, 0 or
1. See Details.}

\item{interpolateToCTD}{A logical indicating whether all sensors should
be interpolated to the CTD times to obtain a common time base,
or whether all sensors should simply be interpolated for all
time stamps (which was the default behaviour before 2019-12-08)}

\item{removeTimeSincePowerOn}{Amount of time to remove data after
the CTD is powered on. This is to remove spurious data that can
occur when the glider doesn't sample every yo, and water
trapped within the CTD needs to be flushed out before good data
are obtained.}

\item{progressBar}{either a logical or character value that controls
whether/how to indicate the progress made in reading and interpreting
the data.  This can be useful, since the work can be slow.  If \code{progressBar}
is a logical value, then it indicates whether to show textual progress
with \code{\link[=txtProgressBar]{txtProgressBar()}}.  If \code{progressBar} is the character value \code{"shiny"},
then \code{\link[shiny:withProgress]{shiny::setProgress()}} and \code{\link[shiny:withProgress]{shiny::incProgress()}} will be used,
on the assumption that the call to \code{\link[=read.glider.seaexplorer.realtime]{read.glider.seaexplorer.realtime()}}
was made within the context of a call to \code{\link[shiny:withProgress]{shiny::withProgress()}}.
The default is to use the value returned by \code{\link[=interactive]{interactive()}}, i.e.
to use a textual progress indicator, but only in interactive mode.}

\item{debug}{an integer specifying whether debugging information is
to be printed during processing. If this is not provided, then
the value of \code{\link{getOption}("gliderDebug",0)} is used.
The printing is done by a call to \code{\link{gliderDebug}}.
Setting \code{debug=0} turns off this form of debugging, while
higher values may yield more information, depending on the
function. If one \code{glider} function calls another, it
passes the value of \code{debug} but decreased by 1, which means
that the value of \code{debug} controls not just the breadth
of debugging, but also the depth.}
}
\description{
Reads delayed-mode CSV files produced by a SeaExplorer glider,
as detected by the presence of \code{".raw."} in their names.
Such delayed-mode data are the full resolution data stored on
the glider and downloaded after recovery.
(Use \code{\link[=read.glider.seaexplorer.realtime]{read.glider.seaexplorer.realtime()}} instead
of this, to read data as transmitted by the glider while
it is in the field.)
}
\details{
This function can output either "Level 0" or "Level 1" type
data. Level 0 is simply the raw data as written in the CSV files
with no processing done, other than to remove longitude and
latitude for samples where the glider wasn't actually communicating
with satellites and then interpolate between surface values.

Level 1 processing performs a number of steps to give an
"analysis ready" dataset, including

\enumerate{

\item Interpolation of the surface longitude and latitude to give
an estimate of the subsurface positions. This is a crude estimate of
subsurface location and should be taken only as a first guess.

\item Removal of the first few sensor values from when the glider
is in \code{navState=118} (inflecting up) or \code{navState=110}
(inflecting down). The reason for this is that when the glider is
set to sample on alternating profiles, when the CTD is powered up
the first sample output to the payload computer is the \emph{last}
sample recorded before power down.

\item Interpolation, depending on the value of \code{interpolateToCTD}. If
\code{interpolateToCTD} is \code{TRUE}, then any "extra" sensors are interpolated
to the times for which there is CTD data. Otherwise, NAs for \emph{all}
the sensors are interpolated to a common time, corresponding to the
raw time stamps output from the various sensors. A caution -- this
will produce an apparent "upsampling" of each sensor, so that the
apparent sample rate is higher. For example, if a Wetlabs FLBBCD
sensor sampled, but there is no corresponding GP-CTD sample from
the same time, the CTD parameters will be interpolated from the
ones before and after. This has the disadvantage of interpolating
values that were not measured, but has the advantage of assigning
pressures to values measured by sensors not integrated into the CTD
(e.g. Wetlabs FLBBCD, Rinko O2). Following the interpolation, any
rows with duplicated times are removed.

\item Calculate Practical salinity from conductivity, temperature
and pressure using \code{\link[oce:swSCTp]{oce::swSCTp()}}.

}

In any case, a flag scheme is set up according to the IOOS classification system (see
Table 2 of reference 1), as follows.

\tabular{llll}{
\strong{Name}   \tab \strong{Value} \tab \strong{IOOS Name}          \tab \strong{Description}\cr
\code{pass}          \tab 1              \tab Pass                        \tab Data has passed quality control (QC) tests\cr
\code{not_evaluated} \tab 2              \tab Not Evaluated               \tab Data has not been QC tested\cr
\code{suspect}       \tab 3              \tab Suspect or of High Interest \tab Data is considered to be of suspect or high interest\cr
\code{fail}          \tab 4              \tab Fail                        \tab Data is considered to have failed on one or more QC tests\cr
\code{missing}       \tab 9              \tab Missing Data                \tab Data are missing; using a placeholder\cr
}
}
\section{Renaming of data in seaexplorer files}{


FIXME: are the original names the same in both "raw" and "sub" datasets?

Data in the \code{gli} files are stored in the \code{glider} item within
the \code{data} slot of the returned object, renamed as follows.
(Note that there is also an empty column in the seaexplorer data files,
caused by a semicolon at the ends of the lines. This is read by R, but
then discarded and not stored in the glider object.)

Data in the \code{gli} files are stored in the \code{glider} item within
the \code{data} slot of the returned object, renamed as follows. (If the
new name is listed as \code{.} that means that the old name is retained,
but bear in mind that a new name will likely be assigned at some later
point in the development of this package.)

\tabular{lll}{
\strong{OriginalName}       \tab \strong{Name}              \tab \strong{Notes}\cr
\code{Timestamp}            \tab \code{time}                \tab Converted to POSIXt time.\cr
\code{NavState}             \tab \code{navState}            \tab - \cr
\code{SecurityLevel}        \tab \code{alarm}               \tab - \cr
\code{Heading}              \tab \code{heading}             \tab - \cr
\code{Pitch}                \tab \code{pitch}               \tab - \cr
\code{Roll}                 \tab \code{roll}                \tab - \cr
\code{Depth}                \tab \code{pressureNav}         \tab - \cr
\code{Temperature}          \tab \code{temperatureInternal} \tab - \cr
\code{Pa}                   \tab \code{pressureInternal}    \tab - \cr
\code{Lat}                  \tab \code{latitude}            \tab Converted to decimal degrees.\cr
\code{Lon}                  \tab \code{longitude}           \tab Converted to decimal degrees.\cr
\code{DesiredH}             \tab \code{headingDesired}      \tab - \cr
\code{BallastCmd}           \tab \code{ballastCmd}          \tab - \cr
\code{BallastPos}           \tab \code{ballastPos}          \tab - \cr
\code{LinCmd}               \tab \code{linCmd}              \tab - \cr
\code{LinPos}               \tab \code{linPos}              \tab - \cr
\code{AngCmd}               \tab \code{angCmd}              \tab - \cr
\code{AngPos}               \tab \code{angPos}              \tab - \cr
\code{Voltage}              \tab \code{voltage}             \tab - \cr
\code{Altitude}             \tab \code{altitude}            \tab - \cr
}

Data in the \code{pld1} files are stored in the \code{payload1} item within
the \code{data} slot of the returned object, renamed as follows. Where possible,
the corresponding IOOS NetCDF file variable names are also listed [see
Integrated Ocean Observing System (U.S.). “NGDAC NetCDF File Format Version
2,” March 27, 2019.
https://github.com/ioos/ioosngdac/wiki/NGDAC-NetCDF-File-Format-Version-2].

\tabular{llll}{
\strong{OriginalName}       \tab \strong{Name}              \tab \strong{IOOS name} \tab \strong{Notes}\cr
\code{PLD_REALTIMECLOCK}    \tab \code{time}                \tab \code{time}        \tab Converted to POSIXt time.\cr
\code{NAV_RESOURCE}         \tab \code{navState}            \tab -                  \tab - \cr
\code{NAV_LONGITUDE}        \tab \code{longitude}           \tab \code{lon}         \tab Converted to decimal degrees.\cr
\code{NAV_LATITUDE}         \tab \code{latitude}            \tab \code{lat}         \tab Converted to decimal degrees.\cr
\code{NAV_DEPTH}            \tab \code{pressureNav}         \tab \code{depth}       \tab - \cr
\code{FLBBCD_CHL_COUNT}     \tab \code{chlorophyllCount}    \tab -                  \tab - \cr
\code{FLBBCD_CHL_SCALED}    \tab \code{chlorophyll}         \tab -                  \tab - \cr
\code{FLBBCD_BB_700_COUNT}  \tab \code{backscatterCount}    \tab -                  \tab - \cr
\code{FLBBCD_BB_700_SCALED} \tab \code{backscatter}         \tab -                  \tab - \cr
\code{FLBBCD_CDOM_COUNT}    \tab \code{cdomCount}           \tab -                  \tab - \cr
\code{FLBBCD_CDOM_SCALED}   \tab \code{cdom}                \tab -                  \tab - \cr
\code{GPCTD_CONDUCTIVITY}   \tab \code{conductivity}        \tab -                  \tab - \cr
\code{GPCTD_TEMPERATURE}    \tab \code{temperature}         \tab \code{temperature} \tab degC \cr
\code{GPCTD_PRESSURE}       \tab \code{pressure}            \tab \code{pressure}    \tab dbar \cr
\code{GPCTD_DOF}            \tab \code{oxygenFrequency}     \tab -                  \tab - \cr
-                           \tab \code{salinity}            \tab \code{salinity}    \tab Practical Salinity (computed)\cr
}

Data in the \code{pld2} files (or others for additional payloads)
are ignored in this version of the package. Please contact the
authors, if you need to handle such files.
}

\examples{
library(oceglider)
directory <- system.file("extdata/seaexplorer/raw", package="oceglider")
g <- read.glider.seaexplorer.delayed(directory, progressBar=FALSE)
plot(g, which="p")

}
\seealso{
Other functions for seaexplorer gliders: 
\code{\link{read.glider.seaexplorer.realtime}()}

Other functions to read glider data: 
\code{\link{read.glider.netcdf}()},
\code{\link{read.glider.netcdf.ioos}()},
\code{\link{read.glider.seaexplorer.realtime}()},
\code{\link{read.glider.slocum}()},
\code{\link{read.glider.slocum.netcdf}()}
}
\author{
Clark Richards and Dan Kelley
}
\concept{functions for seaexplorer gliders}
\concept{functions to read glider data}
